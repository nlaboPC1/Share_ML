# 機械学習基礎　第５回　フレームワークの利用

--------------------------------------------------------------------------------------------------
1. Kerasの紹介
--------------------------------------------------------------------------------------------------
機械学習ではコーディングをサポートする様々なフレームワークが開発，配布されている．
有名なものとしてTensorflow, Pytorch, keras, caffe, Chainer等があるが，
今回は扱いやすく,利用者も多いことから特に学習が簡単なtf.kerasについて紹介する．
（フレームワークの特徴比較は自分で調べる）

tf.kerasはtensorflowをKerasでラッピングしたもので
ユーザフレンドリかつ大規模なデータも扱える点が魅力である．

注意としては初回に解説した通り，一般にユーザフレンドリなシステムは
コンピュータにとっては無駄に計算量が増している状態であるため動作が遅い．
そのため，Kerasはプロトタイプの作成に利用されることが多い．

よって今回tf.Kerasを学ぶ目的は以下の２つである．
・プロトタイプを自分で設計できるようになる
・他のフレームワークを理解する基礎力を身につける

---------------------------------------------------------------------------------------------------
2. 準備
---------------------------------------------------------------------------------------------------
今回の内容はgitでのコード共有という形を取る
そのためgit cloneを行ったら以下の準備が必要となる
# 仮想環境の作成https://keras.io/api/
 python3 -m venv myenv
# ライブラリ・フレームワークのインストール
 pip install -r requirements.txt

---------------------------------------------------------------------------------------------------
3. 実装
---------------------------------------------------------------------------------------------------
コードの解説はすべてコメントで行っている
学習の順番は以下のとおりとなる
　keras_train.py
　keras_infe.py
　search_hyper.py
　tensorboard_train.py
　BatchNorm_train.py
　Dropout_train.py
  get_data.py
  get_image.py
  Image_conv.py
　cnn_train.py

---------------------------------------------------------------------------------------------------
4. 発展 
---------------------------------------------------------------------------------------------------
高速化においてはKeras以外のフレームワークを利用するという手法を取るべきであるが，
tf.kerasのままでも最適化や高速化はある程度可能である．

興味があれば以下について調べる．
https://www.tensorflow.org/lite
https://developer.nvidia.com/tensorrt

---------------------------------------------------------------------------------------------------
5. 課題 
---------------------------------------------------------------------------------------------------
※提出の必要はないのでやらなくても良い

課題１
今回の内容を踏まえて，入力をfashion_mnistとしたときにtest_dataでの認識精度が最も良くなるような
学習層とパラメータを設定し，モデルを利便性とユーモアを両立させたファイル名で保存する．
（ネーミングセンスは管理の利便性とユーザの拡大につながるため，SEやプログラマにとって意外と重要である．
　文字数，機能のわかりやすさ，覚えやすさ，オリジナリティなどを考慮して名前をつける練習も課題に含まれる．）

課題２
ローカルディレクトリから訓練データとテストデータを読み込みCNNで学習させる．

---------------------------------------------------------------------------------------------------
6. 注意 
---------------------------------------------------------------------------------------------------
今回の内容は最低限の基礎であり，この内容を組み上げるだけで問題解決を行うのは難しい．
そのため，今回の内容を理解した後，自分で調べて応用力を身につける必要がある．
調査は技術者ブログ等でも良いがフレームワークの公式サイトや論文，書籍を読むほうが結果的には効率が良い．
以下はKerasの公式ページ
https://keras.io/api/



